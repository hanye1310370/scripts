supervisord 是Linux/Unix系统下的一个进程管理工具 
风.foxiswho

安装

yum install supervisor
1
设置开机启动

systemctl enable supervisord.service
1
配置文件

supervisord 的配置 文件是 /etc/supervisord.conf 
自定义配置文件目录是/etc/supervisord.d,该目录下文件已.ini为后缀

supervisord 命令

启动

systemctl start supervisord.service
1
关闭

systemctl stop supervisord.service
1
重启

systemctl restart supervisord.service
1
配置进程

例如有个nginx 进程设置

vim  /etc/supervisord.d/nginx.ini
1
内容如下

[program:nginx]
;directory = /www/lanmps/bin                                 ; 程序的启动目录
command = /www/lanmps/bin/nginx start                ; 启动命令，可以看出与手动在命令行启动的命令是一样的
autostart = true                                                         ; 在 supervisord 启动的时候也自动启动
startsecs = 5                                            ; 启动 5 秒后没有异常退出，就当作已经正常启动了
autorestart = true                                   ; 程序异常退出后自动重启
startretries = 3                                        ; 启动失败自动重试次数，默认是 3
user = www                                           ; 用哪个用户启动
redirect_stderr = true                               ; 把 stderr 重定向到 stdout，默认 false
stdout_logfile_maxbytes = 20MB                   ; stdout 日志文件大小，默认 50MB
stdout_logfile_backups = 20                          ; stdout 日志文件备份数
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile = /www/logs/usercenter_stdout.log
stopasgroup=false     ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程
killasgroup=false     ;默认为false，向进程组发送kill信号，包括子进程

; 可以通过 environment 来添加需要的环境变量，一种常见的用法是修改 PYTHONPATH
; environment=PYTHONPATH=$PYTHONPATH:/path/to/somewhere
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
supervisord 客户端管理命令

supervisorctl status                            # 状态
supervisorctl stop nginx                #关闭 nginx
supervisorctl start nginx               #启动 nginx
supervisorctl restart nginx             #重启 nginx
supervisorctl reread
supervisorctl update                    #更新新的配置
1
2
3
4
5
6
注意:nginx

其他

组成部分

supervisord：服务守护进程 
supervisorctl：命令行客户端 
Web Server：提供与supervisorctl功能相当的WEB操作界面 
XML-RPC Interface：XML-RPC接口

配置文件说明

配置文件/etc/supervisord.conf

[unix_http_server]
file=/tmp/supervisor.sock   ;UNIX socket 文件，supervisorctl 会使用
;chmod=0700                 ;socket文件的mode，默认是0700
;chown=nobody:nogroup       ;socket文件的owner，格式：uid:gid

;[inet_http_server]         ;HTTP服务器，提供web管理界面
;port=127.0.0.1:9001        ;Web管理后台运行的IP和端口，如果开放到公网，需要注意安全性
;username=user              ;登录管理后台的用户名
;password=123               ;登录管理后台的密码

[supervisord]
logfile=/tmp/supervisord.log ;日志文件，默认是 $CWD/supervisord.log
logfile_maxbytes=50MB        ;日志文件大小，超出会rotate，默认 50MB，如果设成0，表示不限制大小
logfile_backups=10           ;日志文件保留备份数量默认10，设为0表示不备份
loglevel=info                ;日志级别，默认info，其它: debug,warn,trace
pidfile=/tmp/supervisord.pid ;pid 文件
nodaemon=false               ;是否在前台启动，默认是false，即以 daemon 的方式启动
minfds=1024                  ;可以打开的文件描述符的最小值，默认 1024
minprocs=200                 ;可以打开的进程数的最小值，默认 200

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ;通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致
;serverurl=http://127.0.0.1:9001 ; 通过HTTP的方式连接supervisord

; [program:xx]是被管理的进程配置参数，xx是进程的名称
[program:xx]
command=/opt/apache-tomcat-8.0.35/bin/catalina.sh run  ; 程序启动命令
autostart=true       ; 在supervisord启动的时候也自动启动
startsecs=10         ; 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒
autorestart=true     ; 程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启
startretries=3       ; 启动失败自动重试次数，默认是3
user=tomcat          ; 用哪个用户启动进程，默认是root
priority=999         ; 进程启动优先级，默认999，值小的优先启动
redirect_stderr=true ; 把stderr重定向到stdout，默认false
stdout_logfile_maxbytes=20MB  ; stdout 日志文件大小，默认50MB
stdout_logfile_backups = 20   ; stdout 日志文件备份数，默认是10
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out
stopasgroup=false     ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程
killasgroup=false     ;默认为false，向进程组发送kill信号，包括子进程

;包含其它配置文件
[include]
files =/etc/supervisord.d/*.ini    ;可以指定一个或多个以.ini结束的配置文件